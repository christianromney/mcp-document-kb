#+TITLE: mcp-document-kb
#+AUTHOR: Christian Romney
#+DATE: 2025-07-08
#+STARTUP: overview
#+OPTIONS: toc:2 num:nil
#+PROPERTY: header-args :mkdirp yes

An [[https://modelcontextprotocol.io][MCP server]] implementation providing a semantic search interface for
tool-capable LLMs over a local knowledgebase built from a directory of notes in
org-mode format.

* Motivation

I take notes nearly every day. I want to use my notes as a "second brain,"
allowing me to instantly recall things I've written in the past and relevant
related content.

I create these notes using Emacs [[https://orgmode.org/][org-mode]] and [[https://www.orgroam.com/][org-roam]]. While these tools have
some great features, they notably lack a powerful search facility, providing
only a simple pattern matching search via [[https://man7.org/linux/man-pages/man1/grep.1.html][grep]] or [[https://github.com/BurntSushi/ripgrep][ripgrep]]. In the age of vector
databases and [[https://ollama.com/library/mxbai-embed-large][powerful embedding models]], we can do better.

Such a system should support the following use-cases and capabilities:

- I want to extract the main semantic topics or concepts from a note to support
  the construction, visualization, and traversal of a knowledge graph.
- I want to find notes I've written based on semantic search. A search for "AI"
  should find notes about "LLMs", for example. This search should return the
  most relevant document fragments related to my query, along with important
  metadata including a list of related notes, absolute file path and last-modified timestamp.
- I want to expose this search capability to tool-capable LLMs via MCP in order
  to enable summarization, citation, recommendation, and deep research.
- Traversal is enabled by:
  + search :: which finds the notes (and their metadata) most closely related to a given a query
  + retrieval :: which returns a single note document and its metadata
- I want the cost, privacy and security benefits of a local knowledgebase
  without a lots of required maintenance.
  + I want knowledge to be automatically added, updated, deleted, or linked to
    other knowledge in the knowledgebase whenever a source note document is added,
    modified, or deleted, as appropriate.

* Technology Choices

- I want the system to be written in Clojure, because I value its power,
  elegance, and simplicity.
- I want to use a local [[https://qdrant.tech/][qdrant]] database to provide search vector.
- I want to expose these capabilities to tool-capable LLMs as an MCP server
  using [[https://www.jsonrpc.org/specification][JSON-RPC 2.0]] over an HTTP transport layer with Server-Sent Events for
  streaming.
- I want to use local LLMs like gemma3n and local embedding models via Ollama.
- I prefer documentation to be written in org-mode whenever possible.
- Diagrams should be written as [[https://mermaid.js.org][mermaid]] source code and embedded as source
  blocks in org-mode documents.

* Documentation
- An architectural summary should follow this [[file:docs/templates/architecture.org][architectural briefing format]].
- All Clojure code should have good docstrings favoring usage semantics over
  mechanics. Clojure's own docstrings are the best example.

* License

Copyright Â© 2025 Christian Romney
Distributed under the [[file:LICENSE][Eclipse Public License version 1.0]].
